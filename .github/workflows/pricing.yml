name: Update Pricing Data

on:
  schedule:
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  update-pricing:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Fetch LiteLLM pricing data
        id: fetch-pricing
        run: |
          curl -s -H "Accept: application/json" \
               -H "User-Agent: claude-powerline-updater" \
               "https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json" \
               -o litellm-pricing.json
          
          if [ ! -s litellm-pricing.json ]; then
            echo "Failed to fetch pricing data"
            exit 1
          fi

      - name: Transform pricing data
        run: |
          node -e "
          const fs = require('fs');
          
          const litellmData = JSON.parse(fs.readFileSync('litellm-pricing.json', 'utf-8'));
          
          const transformed = {
            '_meta': {
              'source': 'https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json',
              'updated': new Date().toISOString().split('T')[0],
              'currency': 'USD',
              'unit': 'per_million_tokens'
            }
          };
          
          for (const [modelId, modelData] of Object.entries(litellmData)) {
            if (!modelId.startsWith('claude-') || !modelData || typeof modelData !== 'object') {
              continue;
            }
            
            const data = modelData;
            const inputPrice = data.input_cost_per_token || data.prompt_cost_per_token || 0;
            const outputPrice = data.output_cost_per_token || data.completion_cost_per_token || 0;
            
            if (inputPrice === 0 || outputPrice === 0) continue;
            
            const inputPerMillion = inputPrice * 1_000_000;
            const outputPerMillion = outputPrice * 1_000_000;
            const cacheWrite5m = inputPerMillion * 1.25;
            const cacheWrite1h = inputPerMillion * 2.0;
            const cacheRead = inputPerMillion * 0.1;
            
            transformed[modelId] = {
              'name': data.litellm_provider_display_name || modelId,
              'input': Math.round(inputPerMillion * 100) / 100,
              'output': Math.round(outputPerMillion * 100) / 100,
              'cache_write_5m': Math.round(cacheWrite5m * 100) / 100,
              'cache_write_1h': Math.round(cacheWrite1h * 100) / 100,
              'cache_read': Math.round(cacheRead * 100) / 100
            };
          }
          
          fs.writeFileSync('pricing.json', JSON.stringify(transformed, null, 2) + '\n');
          console.log(\`Updated pricing for \${Object.keys(transformed).length - 1} models\`);
          "

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet pricing.json; then
            echo "No pricing changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Pricing changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pricing.json
          git commit -m "chore: update pricing data $(date -u +%Y-%m-%d) [skip ci]"
          git push